[{"/Users/johnludeke/MAIN/CODING/react-playground/src/index.js":"1","/Users/johnludeke/MAIN/CODING/react-playground/src/App.js":"2","/Users/johnludeke/MAIN/CODING/react-playground/src/components/Employee.js":"3","/Users/johnludeke/MAIN/CODING/react-playground/src/components/EditEmployee.js":"4","/Users/johnludeke/MAIN/CODING/react-playground/src/components/AddEmployee.js":"5","/Users/johnludeke/MAIN/CODING/react-playground/src/components/Navbar.js":"6"},{"size":279,"mtime":1687321795086,"results":"7","hashOfConfig":"8"},{"size":3045,"mtime":1687322435608,"results":"9","hashOfConfig":"8"},{"size":996,"mtime":1687321795086,"results":"10","hashOfConfig":"8"},{"size":5176,"mtime":1687321795085,"results":"11","hashOfConfig":"8"},{"size":5504,"mtime":1687321795085,"results":"12","hashOfConfig":"8"},{"size":4875,"mtime":1687322133848,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1jtykr9",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"17"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/johnludeke/MAIN/CODING/react-playground/src/index.js",[],[],[],"/Users/johnludeke/MAIN/CODING/react-playground/src/App.js",["36","37"],[],"/Users/johnludeke/MAIN/CODING/react-playground/src/components/Employee.js",["38","39"],[],"import EditEmployee from \"./EditEmployee\";\n\nfunction Employee(props) {\n    return (\n        <>\n            <div className=\"min-w-[350px] max-w-[350px] m-2 py-8 px-8 pb-6 max-w-sm bg-white rounded-xl shadow-lg space-y-2 sm:py-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-6\">\n                <img className=\"object-cover rounded-full h-[100px] w-[100px] block mx-auto h-24 rounded-full sm:mx-0 sm:shrink-0\" src={props.img} alt=\"Face\" />\n                <div className=\"text-center space-y-2 sm:text-left\">\n                    <div className=\"space-y-0.5\">\n                        <p className=\"text-lg text-black font-semibold\">\n                            {props.name}\n                        </p>\n                        <p className=\"text-slate-500 font-medium\">\n                            {props.role}\n                        </p>\n                    </div>\n\n                    {props.editEmployee}\n\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Employee;","/Users/johnludeke/MAIN/CODING/react-playground/src/components/EditEmployee.js",["40"],[],"import { useState } from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction EditEmployee(props) {\n    const [name, setName] = useState(props.name);\n    const [role, setRole] = useState(props.role);\n    const [img, setImg] = useState(props.img);\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <button onClick={handleShow} className=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">Update</button>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Update Employee</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            props.updateEmployee(props.id, name, role, img);\n                        }}\n                        id=\"edit-modal\"\n                        className=\"w-full max-w-sm\"\n                    >\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" for=\"name\">\n                                    Full Name\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-2.5 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"name\"\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value)\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" for=\"role\">\n                                    Role\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-2.5 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"role\"\n                                    type=\"text\"\n                                    value={role}\n                                    onChange={(e) => {\n                                        setRole(e.target.value)\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" for=\"role\">\n                                    Image URL\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-2.5 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"img\"\n                                    type=\"text\"\n                                    value={img}\n                                    onChange={(e) => {\n                                        setImg(e.target.value)\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"bg-slate-500 hover:bg-slate-700 text-white font-bold py-2 px-4 rounded\" onClick={handleClose}>Close</button>\n                    <button className=\"bg-purple-600 hover:bg-purple-800 text-white font-bold py-2 px-4 rounded\" onClick={handleClose} form=\"edit-modal\">Update</button>\n                </Modal.Footer>\n            </Modal >\n        </>\n    );\n}\n\nexport default EditEmployee;","/Users/johnludeke/MAIN/CODING/react-playground/src/components/AddEmployee.js",["41"],[],"import { useState } from 'react';\n// import Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction AddEmployee(props) {\n    const [name, setName] = useState(\"\");\n    const [role, setRole] = useState(\"\");\n    const [img, setImg] = useState(\"\");\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <button onClick={handleShow} className=\"block mx-auto m-5 bg-purple-600 hover:bg-purple-800 text-white font-bold py-2 px-4 rounded\">\n                + Add Employee\n            </button>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Employee</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <form\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                            setName(\"\");\n                            setRole(\"\");\n                            setImg(\"\");\n                            props.newEmployee(name, role, img);\n                        }}\n                        id=\"edit-modal\"\n                        className=\"w-full max-w-sm\"\n                    >\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" for=\"name\">\n                                    Full Name\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"placeholder:text-slate-400 placeholder:italic bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-2.5 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"name\"\n                                    placeholder=\"John Smith\"\n                                    type=\"text\"\n                                    value={name}\n                                    onChange={(e) => {\n                                        setName(e.target.value)\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" for=\"role\">\n                                    Role\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"placeholder:text-slate-400 placeholder:italic bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-2.5 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"role\"\n                                    placeholder=\"Software Developer\"\n                                    type=\"text\"\n                                    value={role}\n                                    onChange={(e) => {\n                                        setRole(e.target.value)\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"md:flex md:items-center mb-6\">\n                            <div className=\"md:w-1/3\">\n                                <label className=\"block text-gray-500 font-bold md:text-right mb-1 md:mb-0 pr-4\" for=\"img\">\n                                    Image URL\n                                </label>\n                            </div>\n                            <div className=\"md:w-2/3\">\n                                <input\n                                    className=\"placeholder:text-slate-400 placeholder:italic bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-2.5 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                                    id=\"img\"\n                                    placeholder=\"https://images.pexels.com/\"\n                                    type=\"text\"\n                                    value={img}\n                                    onChange={(e) => {\n                                        setImg(e.target.value)\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <button className=\"bg-slate-500 hover:bg-slate-700 text-white font-bold py-2 px-4 rounded\" onClick={handleClose}>Close</button>\n                    <button className=\"bg-purple-600 hover:bg-purple-800 text-white font-bold py-2 px-4 rounded\" onClick={handleClose} form=\"edit-modal\">Add</button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default AddEmployee;","/Users/johnludeke/MAIN/CODING/react-playground/src/components/Navbar.js",["42","43"],[],{"ruleId":"44","severity":1,"message":"45","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":11,"column":16,"nodeType":"46","messageId":"47","endLine":11,"endColumn":23},{"ruleId":"44","severity":1,"message":"49","line":1,"column":8,"nodeType":"46","messageId":"47","endLine":1,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":6,"column":13,"nodeType":"52","endLine":9,"endColumn":15},{"ruleId":"44","severity":1,"message":"53","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"53","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"54","line":2,"column":22,"nodeType":"46","messageId":"47","endLine":2,"endColumn":26},{"ruleId":"44","severity":1,"message":"55","line":2,"column":28,"nodeType":"46","messageId":"47","endLine":2,"endColumn":38},"no-unused-vars","'role' is assigned a value but never used.","Identifier","unusedVar","'setRole' is assigned a value but never used.","'EditEmployee' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Menu' is defined but never used.","'Transition' is defined but never used."]